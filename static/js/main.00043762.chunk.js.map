{"version":3,"sources":["components/EquationBoxElement/defaults.ts","components/EquationBoxElement/getEquationBoxNode.ts","components/BigOperator/defaults.ts","components/BigOperator/getEmptyBigOpNode.ts","components/defaults.ts","components/Limit/defaults.ts","components/EquationText/defaults.ts","components/EquationText/getEquationTextNode.ts","components/Limit/getEmptyLimNode.ts","components/Fraction/defaults.ts","components/Fraction/getEmptyFractionCellNode.ts","components/util.ts","components/Matrix/defaults.ts","components/Matrix/createMatrix.tsx","components/Matrix/matrixButton.tsx","components/Matrix/matrixButton.styles.ts","components/Matrix/MatrixPicker.tsx","components/Matrix/matrixDropDown.tsx","components/Matrix/constants.ts","components/mention/constants.ts","components/UneditableBigOperator/defaults.ts","components/UneditableBigOperator/getEmptyBigOpNode.ts","components/mention/mentionables.ts","components/mention/defaults.ts","components/mention/mathMentionOnSelect.ts","components/mention/mathMentionComboBox.tsx","components/toolbar.tsx","components/Icons/Integral/icon.tsx","components/Icons/Summation/icon.tsx","components/Limit/getLimitElements.tsx","components/Fraction/getFractionElements.tsx","components/BigOperator/getOperatorElements.tsx","components/EquationBoxElement/getEquationBoxElement.tsx","components/plugin.tsx","components/EquationText/getEquationTextRenderLeaf.tsx","components/mention/equationMentionElement.tsx","components/components.tsx","Toolbars.tsx","components/mention/autoformat/autoformatUtils.ts","components/mention/autoformat/autoformatBlocks.ts","components/mention/autoformat/autoformatLists.ts","components/mention/autoformat/autoformatMarks.ts","components/mention/autoformat/autoformatRules.ts","config.ts","index.tsx","components/mention/equationMentionNode.ts","index.js"],"names":["ELEMENT_EQUATIONBOX","getEmptyBoxNode","size","gridArea","type","children","text","ELEMENT_BIG_OPERATOR","getEmptyBigOpNode","INTEGRAL","SUMMATION","BIG_OPERATOR","LIMIT","FRACTION","ELEMENT_LIMIT","ELEMENT_EQUATION_TEXT","getEquationTextNode","getEmptyLimNode","getEmptyLimCellNode","getEmptyLimRowNode","getEmptyArrowCellNode","ELEMENT_FRACTION","getEmptyFractionNode","getCurrentSelection","editor","root","_at","at","selection","Range","isRange","isCollapsed","focus","path","anchor","levels","Path","length","selectFirstBox","console","log","textNode","findNode","match","getPluginType","target","Editor","range","ReactEditor","Transforms","setSelection","parent","someNode","next","previous","containsMath","ELEMENT_MATRIX","getParethesisTextNode","transformHeight","style","transform","MatrixButton","name","rowNum","colNum","updateMatrix","styles","usePlateEditorState","createStyles","prefixClassNames","css","content","className","onClick","MatrixPicker","matrix","matrixes","map","rows","cols","MatrixTableDropDown","pluginKey","icon","selectedIcon","arr","Array","i","j","push","getDefaultMatrixes","rest","React","useState","open","setOpen","editorRef","usePlateEditorRef","onToggle","useCallback","control","active","isMarkActive","onOpen","onClose","node","matrixRows","pHeight","getEmptyRowNode","header","colCount","createMatrix","insertNode","select","ELEMENT_EQUATION_MENTION","ELEMENT_UNEDITABLE_BIG_OPERATOR","getEmptyUneditableBigOpNode","MENTIONABLES","key","data","undefined","value","ELEMENT_EQUATION_MENTION_INSERT","mathMentionOnSelect","item","targetRange","comboboxStore","get","getPlugin","options","insertSpaceAfterMention","createMentionNode","pathAbove","getBlockAbove","isBlockEnd","isEnd","withoutNormalizing","insertText","removeNodes","ELEMENT_MENTION_INPUT","t","insertNodes","move","delete","set","reset","MathMentionCombobox","items","component","onRenderItem","ELEMENT_MENTION","id","trigger","getPluginOptions","controlled","onSelectItem","MathToolbar","getPlateEditorRef","tooltip","theme","onMouseDown","e","insertEquation","eq","createEquationBoxPlugin","createPluginFactory","isElement","attributes","element","fontSize","handlers","onKeyDown","isOpen","pathParent","sibling","getNode","preventDefault","stopPropagation","createMatrixPlugin","withProps","StyledElement","as","display","verticalAlign","maxWidth","createEquationTextPlugin","c","props","contentEditable","isVoid","createUneditableBigOperator","createFractionPlugin","createBigOperatorPlugin","createLimitPlugin","createEquationMentionInsert","nodeProps","prefix","classNames","renderLabel","rootProps","selected","useSelected","focused","useFocused","getMentionElementStyles","getHandler","isInline","components","createPlateUI","ELEMENT_CODE_BLOCK","CodeBlockElement","BasicElementToolbarButtons","ELEMENT_H1","ELEMENT_H2","ELEMENT_H3","ELEMENT_H4","ELEMENT_H5","ELEMENT_H6","ELEMENT_BLOCKQUOTE","IndentToolbarButtons","getPreventDefaultHandler","outdent","indent","ListToolbarButtons","ELEMENT_UL","ELEMENT_OL","AlignToolbarButtons","BasicMarkToolbarButtons","MARK_BOLD","MARK_ITALIC","MARK_UNDERLINE","MARK_STRIKETHROUGH","MARK_CODE","MARK_SUPERSCRIPT","clear","MARK_SUBSCRIPT","TableToolbarButtons","insertTable","deleteTable","addRow","deleteRow","addColumn","deleteColumn","preFormat","unwrapList","format","customFormatting","parentEntry","getParent","isType","ELEMENT_CODE_LINE","formatList","elementType","toggleList","autoformatBlocks","mode","triggerAtBlockStart","insertEmptyCodeBlock","defaultType","ELEMENT_DEFAULT","insertNodesOptions","autoformatLists","ELEMENT_LI","ELEMENT_TODO_LI","setNodes","checked","n","isBlock","autoformatMarks","MARK_HIGHLIGHT","autoformatRules","autoformatSmartQuotes","autoformatPunctuation","autoformatLegal","autoformatLegalHtml","autoformatArrow","autoformatMath","resetBlockTypesCommonRule","types","ELEMENT_PARAGRAPH","CONFIG","editableProps","autoFocus","process","spellCheck","placeholder","padding","ELEMENT_EXCALIDRAW","ExcalidrawElement","align","inject","validTypes","lineHeight","defaultNodeValue","validNodeValues","resetBlockType","rules","hotkey","predicate","isBlockAboveEmpty","isSelectionAtBlockStart","trailingBlock","softBreak","query","allow","ELEMENT_TD","exitBreak","before","start","end","KEYS_HEADING","selectOnBackspace","ELEMENT_IMAGE","ELEMENT_MEDIA_EMBED","ELEMENT_HR","autoformat","mentionItems","forceLayout","strictType","docxOptions","deserializeHtml","validClassName","validNodeName","validStyle","fontWeight","el","nodeName","fontStyle","Plugins","plugins","createPlugins","createBlockquotePlugin","createTodoListPlugin","createImagePlugin","createHorizontalRulePlugin","createLineHeightPlugin","createLinkPlugin","createListPlugin","createTablePlugin","createMediaEmbedPlugin","createCodeBlockPlugin","createAlignPlugin","createBoldPlugin","createCodePlugin","createItalicPlugin","createHighlightPlugin","createUnderlinePlugin","createStrikethroughPlugin","createSubscriptPlugin","createSuperscriptPlugin","createFontBackgroundColorPlugin","createFontFamilyPlugin","createFontColorPlugin","createFontSizePlugin","createFontWeightPlugin","createKbdPlugin","createNodeIdPlugin","createIndentPlugin","createResetNodePlugin","createSoftBreakPlugin","createExitBreakPlugin","createNormalizeTypesPlugin","createTrailingBlockPlugin","createSelectOnBackspacePlugin","createComboboxPlugin","createDeserializeMdPlugin","createDeserializeCsvPlugin","createDeserializeDocxPlugin","createJuicePlugin","createMentionPlugin","item2","equationMentionNode","MARK_COLOR","MARK_BG_COLOR","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00043762.chunk.js","sourcesContent":["\r\nexport const ELEMENT_EQUATIONBOX = 'equationbox';\r\n\r\n","import { ELEMENT_PARAGRAPH } from \"@udecode/plate\"\r\nimport { ELEMENT_EQUATIONBOX } from \"./defaults\"\r\nimport matrixElement from \"../MatrixElement/index\";\r\nimport { ELEMENT_EQUATION_TEXT } from \"../EquationText\";\r\n\r\nexport const getEmptyBoxNode = (size:number = 1, gridArea?:string) => {\r\n  return{\r\n    type: ELEMENT_EQUATIONBOX,\r\n    children: [{text: \"\\u2b1a\"}],\r\n    size: size,\r\n    gridArea: gridArea\r\n  }\r\n}\r\n\r\n\r\n","export const ELEMENT_BIG_OPERATOR = \"bigoperator\"","import { ELEMENT_TR, TablePluginOptions } from '@udecode/plate-table';\r\nimport { TElement } from '@udecode/plate-core';\r\nimport { getEmptyBoxNode } from '../EquationBoxElement/getEquationBoxNode';\r\nimport { ELEMENT_BIG_OPERATOR } from './defaults';\r\nimport { getEquationTextNode } from '../EquationText';\r\n\r\n\r\nexport const getEmptyBigOpNode = () => {\r\n  return <TElement>{\r\n      type: ELEMENT_BIG_OPERATOR,\r\n      children: [\r\n        getEmptyBoxNode(.75),\r\n        getEmptyBoxNode(1.5),\r\n        getEmptyBoxNode(.75),\r\n        getEmptyBoxNode(1,'right')\r\n      ],\r\n    };\r\n  }\r\n","export const INTEGRAL = 'Integral'\r\nexport const SUMMATION = 'Summation'\r\nexport const BIG_OPERATOR = 'Big Operator'\r\nexport const LIMIT = 'Limit'\r\nexport const FRACTION = 'Fraction'\r\nexport const MATRIX = 'Matrix'\r\n","export const ELEMENT_LIMIT = \"limitsymbol\"\r\n","import { RenderLeaf } from \"@udecode/plate\";\r\n\r\nexport const ELEMENT_EQUATION_TEXT = 'equationtext';\r\n\r\n\r\n  ","import { ELEMENT_EQUATION_TEXT } from \".\"\r\n\r\nexport const getEquationTextNode = (text:string) => {\r\n    return {\r\n        type: ELEMENT_EQUATION_TEXT,\r\n        children: [{text: text}],\r\n    }\r\n}","import { ELEMENT_TR, TablePluginOptions, TElement\r\n } from '@udecode/plate';\r\nimport { ELEMENT_LIMIT } from './defaults';\r\nimport { ELEMENT_EQUATION_TEXT } from '../EquationText';\r\nimport { getEmptyBoxNode } from '../EquationBoxElement/getEquationBoxNode';\r\n\r\n\r\n\r\n\r\nexport const getEmptyLimNode = (\r\n) => {\r\n\r\n  return <TElement>{\r\n    type: ELEMENT_LIMIT,\r\n    children: [\r\n      getEmptyLimCellNode(),\r\n      getEmptyLimRowNode(),\r\n      getEmptyBoxNode(1,'right')\r\n    ]\r\n  };\r\n};\r\nconst getEmptyLimRowNode = () => {\r\n  return{\r\n    type: \"span\",\r\n    children: [\r\n      getEmptyBoxNode(.75),\r\n      getEmptyArrowCellNode(),\r\n      getEmptyBoxNode(.75)\r\n    ]\r\n  }\r\n}\r\n\r\n\r\nconst getEmptyLimCellNode = () => {\r\n  return{\r\n    type: ELEMENT_EQUATION_TEXT,\r\n    children: [{text: \"Lim\"}]\r\n  }\r\n}\r\n\r\nconst getEmptyArrowCellNode = () => {\r\n  return{\r\n    type: ELEMENT_EQUATION_TEXT,\r\n    children: [{text: \"\\u2192\"}]\r\n  }\r\n}","export const ELEMENT_FRACTION = \"fraction\"\r\n","\r\nimport { TablePluginOptions, TElement\r\n } from '@udecode/plate';\r\nimport { ELEMENT_FRACTION } from '.';\r\nimport { getEmptyBoxNode } from '../EquationBoxElement/getEquationBoxNode';\r\n\r\n\r\nexport const getEmptyFractionNode = (\r\n\r\n) => {\r\n  return <TElement>{\r\n    type: ELEMENT_FRACTION,\r\n    children: [\r\n      getEmptyBoxNode(),\r\n      getEmptyBoxNode(),\r\n    ],\r\n  };\r\n};","import { transform } from \"@babel/core\";\r\nimport { findNode, getNode, getNodesRange, getRangeBefore, isCollapsed, KeyboardHandler, selectEditor, someNode, getPluginType, PlateEditor, comboboxStore } from \"@udecode/plate\";\r\nimport { PEditor } from \"@udecode/plate-core\";\r\nimport { BaseEditor, Editor, Path, Range, Transforms } from \"slate\";\r\nimport { ReactEditor } from \"slate-react\";\r\nimport { ELEMENT_EQUATIONBOX } from \"./EquationBoxElement\";\r\n\r\nexport const getCurrentSelection = (editor:PlateEditor, root?:boolean):Path | undefined => {\r\n    var at = editor.selection\r\n    var _at: Path;\r\n    if (Range.isRange(at) && !isCollapsed(at)) {\r\n      _at = at.focus.path;\r\n    } else if (Range.isRange(at)) {\r\n      _at = at.anchor.path;\r\n    } else {\r\n      _at = at as unknown as Path;\r\n    }\r\n    if(root){\r\n        var levels = Path.levels(_at)\r\n        if (levels.length<1)\r\n            return\r\n        return levels[1]\r\n    }\r\n    return _at\r\n\r\n}\r\nexport const selectFirstBox = (editor:PlateEditor) => {\r\n    var selection = getCurrentSelection(editor, true)\r\n    console.log(selection)\r\n    if(selection){\r\n        let textNode = findNode(editor, {at: selection, match: {type: getPluginType(editor, ELEMENT_EQUATIONBOX)}})\r\n        if(textNode){\r\n            let target = Editor.range(editor, textNode[1])\r\n            ReactEditor.focus(editor as unknown as ReactEditor)\r\n            Transforms.setSelection(editor, target)\r\n            let path = target.anchor.path as Path \r\n            path = Path.parent(path)            \r\n            while (someNode(editor, {at:path }))\r\n            {\r\n              path = Path.next(path);\r\n            }\r\n            path = Path.previous(path);\r\n            return path;\r\n\r\n        }\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const equationBoxOnKeyDown = (): KeyboardHandler => (editor) => (e) => {\r\n    if (e.key === 'Tab' || e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n        var found = false\r\n        var selection = getCurrentSelection(editor)\r\n          if (selection) {\r\n            if(!containsMath(editor,selection)||comboboxStore.get.isOpen()) //if not at math node of if combobox is open do nothing\r\n              return\r\n            var pathParent = Path.parent(selection) //get parent\r\n            let sibling = Path.next(pathParent)\r\n            while (getNode(editor,sibling)){ //check if math equation node has any more boxes\r\n              let textNode = findNode(editor, {at: sibling, match: {type: getPluginType(editor, ELEMENT_EQUATIONBOX)}})\r\n              if(textNode){ //if found another box, select it\r\n                found = true\r\n                let target = Editor.range(editor, sibling)\r\n                Transforms.setSelection(editor, Editor.range(editor, target))\r\n                e.preventDefault()\r\n                e.stopPropagation()\r\n                break\r\n              }\r\n              sibling = Path.next(sibling)\r\n            }\r\n          }\r\n    }\r\n    if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n        var selection = getCurrentSelection(editor)\r\n        if (selection) {\r\n            if(!containsMath(editor,selection)||comboboxStore.get.isOpen()) ////if not at math node of if combobox is open do nothing\r\n              return\r\n            var pathParent = Path.parent(selection) //get parent\r\n            if(pathParent.at(pathParent.length-1)!==0) { //make sure sibling isnt negative\r\n                let sibling = Path.previous(pathParent)\r\n                while (getNode(editor,sibling)){ //check if math equation node has any more boxes\r\n                let textNode = findNode(editor, {at: sibling, match: {type: getPluginType(editor as PlateEditor, ELEMENT_EQUATIONBOX)}})\r\n                if(textNode){ //if found another box, select it\r\n                    found = true\r\n                    let target = Editor.range(editor, sibling)\r\n                    Transforms.setSelection(editor, Editor.range(editor, target))\r\n                    e.preventDefault()\r\n                    e.stopPropagation()\r\n                    break\r\n                }\r\n                sibling = Path.previous(sibling)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\nexport const containsMath = (editor:PlateEditor, selection:Path ):boolean => {\r\n    return someNode(editor, {at:selection, match: {type: getPluginType(editor, ELEMENT_EQUATIONBOX)} })\r\n}","export const ELEMENT_MATRIX = 'matrix'","import { getEmptyRowNode, getEmptyTableNode, PlateEditor } from \"@udecode/plate\"\r\nimport { ELEMENT_EQUATION_TEXT } from \"../EquationText\"\r\nimport { ELEMENT_MATRIX } from \"./defaults\"\r\n\r\nexport const createMatrix = (editor: PlateEditor, rowNum: number, colNum: number) => {\r\n    const matrixRows = Array()\r\n    const pHeight = 0.315*(4*rowNum)\r\n    for(let i = 1; i<=rowNum; i++){\r\n        matrixRows.push(getEmptyRowNode(editor, {header: false, colCount:colNum}))\r\n    }\r\n    return {\r\n        type: \"span\",\r\n        children: [\r\n            getParethesisTextNode('( ',pHeight),\r\n            {\r\n                type:ELEMENT_MATRIX,\r\n                children: matrixRows,\r\n            },\r\n            getParethesisTextNode(' )',pHeight),\r\n        ]\r\n\r\n    }\r\n}\r\n\r\nconst getParethesisTextNode = (text:string, transformHeight:number) => {\r\n    const pStyle = {transform: \"scale(1.2,\"+transformHeight+\")\"}\r\n    return {\r\n        type: ELEMENT_EQUATION_TEXT,\r\n        children: [{text: text}],\r\n        style: pStyle\r\n    }\r\n}","import Tippy from \"@tippyjs/react\";\r\nimport { getEmptyRowNode, getEmptyTableNode, PlateEditor, usePlateEditorState } from \"@udecode/plate\";\r\nimport { createStyles } from \"@udecode/plate-styled-components\";\r\nimport tw from \"twin.macro\";\r\nimport { ELEMENT_MATRIX } from \"./defaults\"; \r\nimport { getMatrixButtonStyles } from \"./matrixButton.styles\";\r\n\r\ntype MatrixButtonProps = {\r\n    name:string\r\n    rowNum: number;\r\n    colNum: number;\r\n    updateMatrix: (rows:number, cols:number) => void; \r\n};\r\n\r\n\r\n\r\nexport const MatrixButton = ({\r\n    name,\r\n    rowNum,\r\n    colNum,\r\n    updateMatrix\r\n}: MatrixButtonProps) => {\r\n    const editor = usePlateEditorState()!;\r\n    const styles = getMatrixButtonStyles();\r\n    const content = (\r\n        <div className=\"matrix-selector-data\">\r\n            <button \r\n            data-testid=\"matrix-selector-button\"\r\n            type=\"button\"\r\n            aria-label={name}\r\n            name={name}\r\n            onClick={() => updateMatrix(rowNum, colNum)}\r\n            css={styles.root.css}\r\n            ></button>\r\n        </div>\r\n    );\r\n    return name ? <Tippy content={name}>{content}</Tippy> : content;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { createStyles } from \"@udecode/plate\";\r\nimport { css } from \"styled-components\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const getMatrixButtonStyles = () =>\r\n  createStyles(\r\n    { prefixClassNames: 'MatrixButton' },\r\n    {\r\n      root: [\r\n        tw`cursor-pointer h-4 w-4 border-0`,\r\n        css`\r\n          background-Matrix: #d1d5da;\r\n          :hover {\r\n            box-shadow: 0px 0px 5px 1px #9a9a9a;\r\n          }\r\n          :focus {\r\n            box-shadow: 0px 0px 5px 1px #676767;\r\n          }\r\n        `,\r\n      ],\r\n    }\r\n  );\r\n  ","import { MatrixButton } from \"./matrixButton\";\r\nimport { MatrixType } from \"./matrixType\";\r\n\r\ntype MatrixPickerProps = {\r\n    matrix?: string;\r\n    matrixes: MatrixType[];\r\n    updateMatrix: (rows:number, cols:number) => void\r\n  };\r\n\r\n  export const MatrixPicker = ({\r\n      matrix,\r\n      matrixes,\r\n      updateMatrix\r\n  }:MatrixPickerProps) => {\r\n    //const styles = getMatrixPickerStyles();\r\n    return (\r\n        <div className=\"matrix-container\">\r\n          {matrixes.map(({ name, rows, cols }) => (\r\n            <MatrixButton\r\n              key={name}\r\n              name={name}\r\n              rowNum={rows}\r\n              colNum={cols}\r\n              updateMatrix={updateMatrix}\r\n            />\r\n          ))}\r\n        </div>\r\n    );\r\n  }","import { RestartAlt } from \"@styled-icons/material\";\r\nimport { ToolbarButtonProps, ToolbarDropdown, ToolbarButton, isCollapsed, someNode, isMarkActive, getPluginType, usePlateEditorRef, usePlateEditorState } from \"@udecode/plate\";\r\nimport React, { ReactNode, useCallback } from \"react\";\r\nimport { Transforms } from \"slate\";\r\nimport { ReactEditor } from \"slate-react\";\r\nimport { getDefaultMatrixes } from \"./constants\";\r\nimport { createMatrix } from \"./createMatrix\";\r\nimport {  MatrixButton } from \"./matrixButton\";\r\nimport { MatrixPicker } from \"./MatrixPicker\";\r\nimport { MatrixType } from \"./matrixType\";\r\n\r\ntype MatrixPickerToolbarDropdownProps = {\r\n    pluginKey: string;\r\n    icon: ReactNode;\r\n    selectedIcon: ReactNode;\r\n    matrixes?: MatrixType[];\r\n  };\r\nexport const MatrixTableDropDown = ({\r\n  pluginKey,\r\n  icon,\r\n  selectedIcon,\r\n  matrixes = getDefaultMatrixes(),\r\n  ...rest\r\n\r\n}:MatrixPickerToolbarDropdownProps) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const editor = usePlateEditorState()!;\r\n    const editorRef = usePlateEditorRef()!;\r\n    const type = getPluginType(editorRef, pluginKey);\r\n    const onToggle = useCallback(() => {\r\n      setOpen(!open);\r\n    }, [open, setOpen]);\r\n\r\n    const updateMatrix = (rows:number, cols:number) => {\r\n      if (editorRef && editor && editor.selection) {\r\n        var node = createMatrix(editorRef, rows, cols)\r\n        editor.insertNode(node)\r\n        Transforms.select(editorRef, editor.selection);\r\n        ReactEditor.focus(editorRef);\r\n        onToggle()\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <ToolbarDropdown\r\n        control={\r\n          <ToolbarButton\r\n            active={!!editor?.selection && isMarkActive(editor, type)}\r\n            icon={icon}\r\n            {...rest}\r\n          />\r\n        }\r\n        open={open}\r\n        onOpen={onToggle}\r\n        onClose={onToggle}\r\n      >\r\n        <MatrixPicker\r\n            matrix={\"matrixes\"}\r\n            matrixes={matrixes}\r\n            updateMatrix={updateMatrix}\r\n\r\n        />\r\n      </ToolbarDropdown>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n","export const getDefaultMatrixes = () => {\r\n    const arr = Array()\r\n    for(var i = 1; i<11; i++){\r\n        for(var j = 1; j<11; j++){\r\n            arr.push({name: i + \"x\" + j, rows: i, cols: j})\r\n        }\r\n    }\r\n    return arr;\r\n}","export const ELEMENT_EQUATION_MENTION = 'equationMention'","export const ELEMENT_UNEDITABLE_BIG_OPERATOR = \"ubigoperator\"","import { ELEMENT_TR, TablePluginOptions } from '@udecode/plate-table';\r\nimport { TElement } from '@udecode/plate-core';\r\nimport { getEmptyBoxNode } from '../EquationBoxElement/getEquationBoxNode';\r\nimport { ELEMENT_UNEDITABLE_BIG_OPERATOR } from './defaults';\r\nimport { getEquationTextNode } from '../EquationText';\r\n\r\n\r\nexport const getEmptyUneditableBigOpNode = (text?:string) => {\r\n  if(!text) return <TElement>{}\r\n  return <TElement>{\r\n      type: ELEMENT_UNEDITABLE_BIG_OPERATOR,\r\n      children: [\r\n        getEmptyBoxNode(.75),\r\n        getEquationTextNode(text),\r\n        getEmptyBoxNode(.75),\r\n        getEmptyBoxNode(1,'right')\r\n      ],\r\n    };\r\n  }\r\n","import { AnyObject, MentionNodeData, TComboboxItem, TElement } from '@udecode/plate';\r\nimport { getEmptyBigOpNode } from '../BigOperator/getEmptyBigOpNode';\r\nimport { getEmptyFractionNode } from '../Fraction';\r\nimport { getEmptyLimNode } from '../Limit/getEmptyLimNode';\r\nimport { getEmptyUneditableBigOpNode } from '../UneditableBigOperator/getEmptyBigOpNode';\r\n\r\nexport type MentionEquationData = {\r\n    node: undefined | ((arg0?: string) => TElement<AnyObject>),\r\n    value:string\r\n\r\n}\r\nexport const MENTIONABLES: TComboboxItem<MentionEquationData>[] = [  \r\n  { key: '0', data:  { node: undefined,                    value:    '\\u003D'}, text: 'equals' },\r\n  { key: '1', data:  { node: undefined,                    value:    '\\u2260'}, text: 'notequalto'},\r\n  { key: '2', data:  { node: undefined,                    value:    '\\u2248'}, text: 'approximation'},\r\n  { key: '3', data:  { node: undefined,                    value:    '\\u003E'}, text: 'greater than'},\r\n  { key: '4', data:  { node: undefined,                    value:    '\\u003C'}, text: 'less than'},\r\n  { key: '5', data:  { node: undefined,                    value:    '\\u2265'}, text: 'greater than or equal to'},\r\n  { key: '6', data:  { node: undefined,                    value:    '\\u2264'}, text: 'less than or equal to'},\r\n  { key: '7', data:  { node: undefined,                    value:    '\\u0028'}, text: 'left parenthesis'},\r\n  { key: '8', data:  { node: undefined,                    value:    '\\u0029'}, text: 'right parenthesis'},\r\n  { key: '9', data:  { node: undefined,                    value:    '\\u005B'}, text: 'left square bracket'},\r\n  { key: '10', data: { node: undefined,                    value:    '\\u005D'}, text: 'right square bracket'},\r\n  { key: '11', data: { node: undefined,                    value:    '\\u002B'}, text: 'plus'},\r\n  { key: '12', data: { node: undefined,                    value:    '\\u2212'}, text: 'minus'},\r\n  { key: '13', data: { node: undefined,                    value:    '\\u00B1'}, text: 'plus or minus'},\r\n  { key: '14', data: { node: undefined,                    value:    '\\u2213'}, text: 'minus or plus'},\r\n  { key: '15', data: { node: undefined,                    value:    '\\u2217'}, text: 'multiplication star'},\r\n  { key: '16', data: { node: undefined,                    value:    '\\u00D7'}, text: 'multiplication cross'},\r\n  { key: '17', data: { node: undefined,                    value:    '\\u22C5'}, text: 'multiplication dot'},\r\n  { key: '18', data: { node: undefined,                    value:    '\\u00F7'}, text: 'division symbol'},\r\n  { key: '19', data: { node: undefined,                    value:    '\\u2215'}, text: 'division slash'},\r\n  { key: '20', data: { node: undefined,                    value:    'mod'}, text: 'modulo'},\r\n  { key: '21', data: { node: undefined,                    value:    '\\u2038'}, text: 'caret'},\r\n  { key: '22', data: { node: undefined,                    value:    '\\u221A'}, text: 'square root'},\r\n  { key: '23', data: { node: undefined,                    value:    '\\u221B'}, text: 'cube root'},\r\n  { key: '24', data: { node: undefined,                    value:    '\\u221C'}, text: 'fourth root'},\r\n  { key: '25', data: { node: undefined,                    value:    '\\u0025'}, text: 'percent'},\r\n  { key: '26', data: { node: undefined,                    value:    '\\u2030'}, text: 'permille'},\r\n  { key: '27', data: { node: undefined,                    value:    'ppm'}, text: 'per million'},\r\n  { key: '28', data: { node: undefined,                    value:    'ppb'}, text: 'per billion'},\r\n  { key: '29', data: { node: undefined,                    value:    'ppt'}, text: 'per trillion'},\r\n  { key: '30', data: { node: undefined,                    value:    '\\u00B0'}, text: 'degree'},\r\n  { key: '31', data: { node: undefined,                    value:    '\\u2032'}, text: 'prime'},\r\n  { key: '32', data: { node: undefined,                    value:    '\\u2033'}, text: 'double prime'},\r\n  { key: '33', data: { node: undefined,                    value:    '\\u007E'}, text: 'approximation tilde'},\r\n  { key: '34', data: { node: undefined,                    value:    '\\u03c0'}, text: 'pi'},\r\n  { key: '35', data: { node: undefined,                    value:    'rad'}, text: 'radians'},\r\n  { key: '36', data: { node: undefined,                    value:    'grad'}, text: 'gradians'},\r\n  { key: '37', data: { node: undefined,                    value:    '\\u2261'}, text: 'identical'},\r\n  { key: '38', data: { node: undefined,                    value:    '\\u221E'}, text: 'infinity'},\r\n  { key: '39', data: { node: undefined,                    value:    '\\u007B'}, text: 'left brace'},\r\n  { key: '40', data: { node: undefined,                    value:    '\\u007D'}, text: 'right brace'},\r\n  { key: '41', data: { node: undefined,                    value:    '\\u230A'}, text: 'left floor'},\r\n  { key: '42', data: { node: undefined,                    value:    '\\u230B'}, text: 'right floor'},\r\n  { key: '43', data: { node: undefined,                    value:    '\\u2308'}, text: 'left ceiling'},\r\n  { key: '44', data: { node: undefined,                    value:    '\\u2309'}, text: 'right ceiling'},\r\n  { key: '45', data: { node: undefined,                    value:    '\\u0021'}, text: 'factorial'},\r\n  { key: '46', data: { node: undefined,                    value:    '\\u007C'}, text: 'absolute value brace'},\r\n  { key: '47', data: { node: undefined,                    value:    '\\u0394'}, text: 'delta'},\r\n  { key: '48', data: { node: undefined,                    value:    '\\u{1D452}'}, text: 'euler'},\r\n  { key: '49', data: { node: undefined,                    value:    '\\u03C6'}, text: 'phi'},\r\n  { key: '50', data: { node: getEmptyLimNode,              value:    'lim'}, text: 'lim'},\r\n  { key: '51', data: { node: undefined,                    value:    'log'}, text: 'log'},\r\n  { key: '52', data: { node: undefined,                    value:    'ln'}, text: 'natural log'},\r\n  { key: '53', data: { node: undefined,                    value:    'ln'}, text: 'ln'},\r\n  { key: '54', data: { node: undefined,                    value:    'max'}, text: 'max'},\r\n  { key: '55', data: { node: undefined,                    value:    'min'}, text: 'min'},\r\n  { key: '56', data: { node: undefined,                    value:    'sin'}, text: 'sin'},\r\n  { key: '57', data: { node: undefined,                    value:    'cos'}, text: 'cos'},\r\n  { key: '58', data: { node: undefined,                    value:    'tan'}, text: 'tan'},\r\n  { key: '59', data: { node: undefined,                    value:    'csc'}, text: 'csc'},\r\n  { key: '60', data: { node: undefined,                    value:    'sec'}, text: 'sec'},\r\n  { key: '61', data: { node: undefined,                    value:    'cot'}, text: 'cot'},\r\n  { key: '62', data: { node: undefined,                    value:    'sinh'}, text: 'sinh'},\r\n  { key: '63', data: { node: undefined,                    value:    'cosh'}, text: 'cosh'},\r\n  { key: '64', data: { node: undefined,                    value:    'tanh'}, text: 'tanh'},\r\n  { key: '65', data: { node: undefined,                    value:    'csch'}, text: 'csch'},\r\n  { key: '66', data: { node: undefined,                    value:    'sech'}, text: 'sech'},\r\n  { key: '67', data: { node: undefined,                    value:    'coth'}, text: 'coth'},\r\n  { key: '68', data: { node: undefined,                    value:    '\\u22c3'}, text: 'union'},\r\n  { key: '69', data: { node: undefined,                    value:    '\\u22c2'}, text: 'intersection'},\r\n  { key: '70', data: { node: undefined,                    value:    '\\u2227'}, text: 'and'},\r\n  { key: '71', data: { node: undefined,                    value:    '\\u2228'}, text: 'or'},\r\n  { key: '72', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u222b'}, text: 'integral'},\r\n  { key: '73', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u222c'}, text: 'double integral'},\r\n  { key: '74', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u222d'}, text: 'triple integral'},\r\n  { key: '75', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u2a0c'}, text: 'quadruple integral'},\r\n  { key: '76', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u222e'}, text: 'contour integral'},\r\n  { key: '77', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u222f'}, text: 'surface integral'},\r\n  { key: '78', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u2230'}, text: 'volume integral'},\r\n  { key: '79', data: { node: getEmptyUneditableBigOpNode,  value:    '\\u2211'}, text: 'summation'},\r\n  { key: '80', data: { node: getEmptyFractionNode,         value:    '\\u00bc'}, text: 'fraction'},\r\n  { key: '81', data: { node: getEmptyBigOpNode,            value:    'bigoperator'}, text: 'bigoperator'},\r\n  { key: '82', data: { node: undefined,                    value:    '\\u220f'}, text: 'product'},\r\n  { key: '83', data: { node: undefined,                    value:    '\\u2210'}, text: 'coproduct'},\r\n  { key: '84', data: { node: getEmptyUneditableBigOpNode,                    value:    '\\u22c3'}, text: 'union with limits'},\r\n  { key: '85', data: { node: getEmptyUneditableBigOpNode,                    value:    '\\u22c2'}, text: 'intersection with limits'},\r\n  { key: '86', data: { node: getEmptyUneditableBigOpNode,                    value:    '\\u2227'}, text: 'and with limits'},\r\n  { key: '87', data: { node: getEmptyUneditableBigOpNode,                    value:    '\\u2228'}, text: 'or with limits'},\r\n];\r\n","export const ELEMENT_EQUATION_MENTION_INSERT = 'equationMentionInsert'","\r\nimport { ComboboxOnSelectItem, comboboxStore, Data, ELEMENT_MENTION, ELEMENT_MENTION_INPUT, getBlockAbove, getPlugin, getPluginOptions, insertNodes, MentionNode, MentionNodeData, MentionPlugin, NoData, PlatePluginKey, TComboboxItem } from '@udecode/plate';\r\n\r\nimport { Editor, Transforms } from 'slate';\r\nimport { ELEMENT_EQUATION_TEXT } from '../EquationText';\r\nimport { ELEMENT_EQUATION_MENTION } from './constants';\r\nimport { ELEMENT_EQUATION_MENTION_INSERT } from './defaults';\r\nimport { MentionEquationData } from './mentionables';\r\n\r\n\r\nexport interface CreateMentionNode<TData extends Data> {\r\n  (item: TComboboxItem<TData>): MentionNodeData;\r\n}\r\n\r\nexport const mathMentionOnSelect = <TData extends Data = NoData>({\r\n  key = ELEMENT_EQUATION_MENTION,\r\n}: PlatePluginKey = {}): ComboboxOnSelectItem<TData> => (editor, item) => {\r\n  const targetRange = comboboxStore.get.targetRange();\r\n  if (!targetRange) return;\r\n  \r\n  const {\r\n    type,\r\n    options: { insertSpaceAfterMention, createMentionNode },\r\n  } = getPlugin<MentionPlugin>(editor, ELEMENT_EQUATION_MENTION);\r\n  const pathAbove = getBlockAbove(editor)?.[1];\r\n  const isBlockEnd =\r\n    editor.selection &&\r\n    pathAbove &&\r\n    Editor.isEnd(editor, editor.selection.anchor, pathAbove);\r\n\r\n  Editor.withoutNormalizing(editor, () => {\r\n    // insert a space to fix the bug\r\n    if (isBlockEnd) {\r\n      Transforms.insertText(editor, ' ');\r\n    }\r\n\r\n    // select the text and insert the element\r\n    Transforms.select(editor, targetRange);\r\n    \r\n    Transforms.removeNodes(editor, {\r\n      // TODO: replace any\r\n      match: (node: any) => node.type === ELEMENT_MENTION_INPUT,\r\n    });\r\n    var t = item.data as MentionEquationData\r\n    if(t.node){\r\n      insertNodes(editor,t.node(t.value))\r\n    }\r\n      \r\n    else{\r\n      insertNodes<MentionNode>(editor, {\r\n        type: ELEMENT_EQUATION_MENTION_INSERT,\r\n        children: [{ text: '' }],\r\n        ...createMentionNode!(item),\r\n      });\r\n    }\r\n\r\n    // move the selection after the element\r\n    Transforms.move(editor);\r\n\r\n    // delete the inserted space\r\n    if (isBlockEnd && !insertSpaceAfterMention) {\r\n      Transforms.delete(editor);\r\n    }\r\n  });\r\n  return comboboxStore.set.reset();\r\n};\r\n","import { getPluginOptions, usePlateEditorRef } from '@udecode/plate-core';\r\nimport {\r\n  ELEMENT_MENTION,\r\n  MentionPlugin,\r\n} from '@udecode/plate-mention';\r\nimport { mathMentionOnSelect } from './mathMentionOnSelect';\r\nimport { Combobox, ComboboxProps, Data, NoData } from '@udecode/plate';\r\n\r\nexport const MathMentionCombobox = <TData extends Data = NoData>({\r\n  items,\r\n  component,\r\n  onRenderItem,\r\n  pluginKey = ELEMENT_MENTION,\r\n  id = pluginKey,\r\n}: Pick<\r\n  Partial<ComboboxProps<TData>>,\r\n  'id' | 'items' | 'component' | 'onRenderItem'\r\n> & { pluginKey?: string }) => {\r\n  const editor = usePlateEditorRef()!;\r\n\r\n  const { trigger } = getPluginOptions<MentionPlugin>(editor, pluginKey);\r\n  console.log(trigger)\r\n  return (\r\n    <Combobox\r\n      id={id}\r\n      trigger={trigger!}\r\n      controlled\r\n      items={items}\r\n      component={component}\r\n      onRenderItem={onRenderItem}\r\n      onSelectItem={mathMentionOnSelect({\r\n        key: pluginKey,\r\n      })}\r\n    />\r\n  );\r\n};\r\n","import { insertNodes , getPluginType, getPlateEditorRef, PlateEditor, getPluginOptions, MentionPlugin, Data, getPlugin, comboboxStore, insertEmptyElement, getComboboxStoreById, useActiveComboboxStore, Combobox} from \"@udecode/plate\";\r\nimport { ToolbarButton  } from \"@udecode/plate-toolbar\";\r\nimport { getEmptyBigOpNode } from \"./BigOperator/getEmptyBigOpNode\";\r\nimport { BIG_OPERATOR, FRACTION, INTEGRAL, LIMIT, MATRIX, SUMMATION } from \"./defaults\";\r\nimport {integralIcon} from \"./Icons/Integral/icon\"\r\nimport { getEmptyLimNode } from \"./Limit/getEmptyLimNode\";\r\nimport  { summationIcon } from \"./Icons/Summation/icon\"\r\nimport { bigOpIcon } from \"./BigOperator\"\r\nimport { limitIcon } from \"./Limit\";\r\nimport { fractionIcon, getEmptyFractionNode } from \"./Fraction\"\r\nimport { Path, BaseEditor, Transforms } from \"slate\";\r\nimport { containsMath, getCurrentSelection, selectFirstBox } from \"./util\";\r\nimport { MatrixTableDropDown } from \"./Matrix/matrixDropDown\";\r\nimport { ELEMENT_MATRIX } from \"./Matrix/defaults\";\r\nimport { Matrix} from \"@styled-icons/simple-icons/Matrix\"\r\nimport { ELEMENT_EQUATION_MENTION } from \"./mention/constants\";\r\nimport { MentionCombobox } from \"@udecode/plate-mention-ui\";\r\nimport { MENTIONABLES } from \"./mention/mentionables\";\r\nimport { MathMentionCombobox } from \"./mention/mathMentionComboBox\";\r\nimport { getEmptyUneditableBigOpNode } from \"./UneditableBigOperator/getEmptyBigOpNode\";\r\n\r\n\r\nexport const MathToolbar = () => {\r\n  const editor = getPlateEditorRef()!\r\n  return (\r\n    \r\n    <>\r\n      <ToolbarButton\r\n        type={getPluginType(editor, INTEGRAL)}\r\n        icon={integralIcon()}\r\n        tooltip={{content: \"Create Integral\", theme: 'light-border'}} \r\n        onMouseDown={e=> insertEquation(INTEGRAL, editor)}\r\n      />\r\n      <ToolbarButton\r\n        type={getPluginType(editor, SUMMATION)}\r\n        icon={summationIcon()}\r\n        tooltip={{content: \"Create Summation\", theme: 'light-border'}} \r\n        onMouseDown={e=> insertEquation(SUMMATION, editor)}\r\n      />\r\n      <ToolbarButton\r\n        type={getPluginType(editor, LIMIT)}\r\n        icon={limitIcon()}\r\n        tooltip={{content: \"Create Limit\", theme: 'light-border'}} \r\n        onMouseDown={e=> insertEquation(LIMIT, editor)}\r\n      />\r\n      <ToolbarButton\r\n        type={getPluginType(editor, FRACTION)}\r\n        icon={fractionIcon()}\r\n        tooltip={{content: \"Create Fraction\", theme: 'light-border'}} \r\n        onMouseDown={e=> insertEquation(FRACTION, editor)}\r\n      />\r\n      <ToolbarButton\r\n        type={getPluginType(editor, BIG_OPERATOR)}\r\n        icon={bigOpIcon()}\r\n        tooltip={{content: \"Create Big Operator\", theme: 'light-border'}} \r\n        onMouseDown={e=> insertEquation(BIG_OPERATOR, editor)}\r\n      />\r\n\r\n      <MatrixTableDropDown pluginKey={ELEMENT_MATRIX} icon={<Matrix />} selectedIcon={<Matrix />} />\r\n      <MathMentionCombobox items={MENTIONABLES} id={ELEMENT_EQUATION_MENTION} />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\n//export const getPreviewRenderLeaf = (): RenderLeaf => () => (props: RenderLeafProps) => <Latex {...props} />;\r\n\r\nfunction insertEquation(eq: string, editor: PlateEditor): import(\"react\").MouseEventHandler<HTMLSpanElement> | undefined {\r\n\r\n\r\n  var selection = getCurrentSelection(editor)\r\n  if(selection){\r\n    if(containsMath(editor, Path.levels(selection)[1]))\r\n      return\r\n  }\r\n  switch (eq){\r\n    case INTEGRAL:{      \r\n      insertNodes(editor, getEmptyUneditableBigOpNode('\\u222b'));\r\n      selectFirstBox(editor)\r\n        break; \r\n      }\r\n    case SUMMATION: {\r\n      insertNodes(editor, getEmptyUneditableBigOpNode('\\u2211'))\r\n      selectFirstBox(editor)\r\n      break; }\r\n    case LIMIT: {\r\n      insertNodes(editor, getEmptyLimNode(), )\r\n      selectFirstBox(editor)\r\n      break; }\r\n    case BIG_OPERATOR: {\r\n      insertNodes(editor, getEmptyBigOpNode(), )\r\n      selectFirstBox(editor)\r\n      break; }\r\n    case FRACTION: {\r\n      insertNodes(editor, getEmptyFractionNode(), )\r\n        \r\n      selectFirstBox(editor)\r\n      \r\n      break;\r\n    }\r\n    default: {\r\n      break; }\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n\r\n","import { RenderLeaf } from \"@udecode/plate\";\r\nimport bottomlimit from \"../BottomLimit\";\r\nimport toplimit from \"../UpperBound\";\r\nimport \"./index.css\";\r\nexport const slateDOM = () => [\r\n  {\r\n    type: \"math\",\r\n    subtype: \"integral\",\r\n    children: [toplimit.slateDOM(), IntegralSymbol(), bottomlimit.slateDOM()],\r\n  },\r\n  {\r\n    children: [\r\n      {\r\n        text: \" \",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const Element = (attributes: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLSpanElement> & React.HTMLAttributes<HTMLSpanElement>, children: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined) => {\r\n  return (\r\n    <span className=\"integral\" {...attributes}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\nexport const integralIcon = () => {\r\n  return (\r\n    <>\r\n      <span className=\"integral\">\r\n        <span className=\"toplimit\">x</span>\r\n        <span className=\"symbol\">&#x222B;</span>\r\n        <span className=\"bottomlimit\">y</span>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nconst IntegralSymbol = () => ({\r\n  type: \"math\",\r\n  subtype: \"intsymbol\",\r\n  children: [{ text: \" \\u222b \" }],\r\n});\r\n\r\nexport const integralInsert = () => {\r\n  return (\r\n    <>\r\n      <sub className=\"intParent\">\r\n      <big>&#x222B;</big>\r\n      <sub className=\"limit\" style={{left: \"-0.25em\"}}><var>&#x2b1a;</var></sub>\r\n      <sub className=\"limit\" style={{left: \"-0.4375em\", marginRight: \"-0.3375em\" }}> </sub>\r\n      </sub>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\n/*\r\n  return (\r\n    <Latex\r\n      delimiters={[\r\n        { left: '$$', right: '$$', display: true },\r\n        { left: '\\\\(', right: '\\\\)', display: false },\r\n        { left: '$', right: '$', display: false },\r\n        { left: '\\\\[', right: '\\\\]', display: true },\r\n      ]}>\r\n      {equation}\r\n    </Latex>\r\n  );\r\n  */","import React from \"react\";\r\nimport bottomlimit from \"../BottomLimit\";\r\nimport toplimit from \"../UpperBound\";\r\nimport \"./index.css\";\r\n\r\nexport const summationDOM = () => [\r\n  {\r\n    type: \"math\",\r\n    subtype: \"summation\",\r\n    children: [toplimit.slateDOM(), summation(), bottomlimit.slateDOM()],\r\n  },\r\n  {\r\n    children: [\r\n      {\r\n        text: \" \",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const summationElement = (attributes: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLSpanElement> & React.HTMLAttributes<HTMLSpanElement>, children: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined) => {\r\n  return (\r\n    <span className=\"summation\" {...attributes}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const summationIcon = (attributes?: any, children?: any) => {\r\n  return (\r\n    <>\r\n      <div className=\"summation\">\r\n        <span className=\"top-limit-ico\">x</span>\r\n        <span className=\"sum-symbol-ico\">&sum;</span>\r\n        <span className=\"bottom-limit-ico\">y=n</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst summation = () => ({\r\n  type: \"math\",\r\n  subtype: \"summationSymbol\",\r\n  children: [{ text: \"\\u2211\" }]\r\n});\r\n","import React from \"react\";\r\nimport LimIndex from \"./LimIndex\";\r\nimport LimValue from \"./LimValue\";\r\nimport \"./index.css\";\r\n//import LimImage from '../LimImage.png';\r\n\r\nexport const limitDOM = () => [\r\n  {\r\n    type: \"math\",\r\n    subtype: \"limit\",\r\n    children: [LimIndex.slateDOM(), LimValue.slateDOM()]\r\n  },\r\n  {\r\n    children: [\r\n      {\r\n        text: \" \"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const limitElement = (attributes: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLSpanElement> & React.HTMLAttributes<HTMLSpanElement>, children: string | number | boolean | {} | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactNodeArray | React.ReactPortal | null | undefined) => {\r\n  return (\r\n    <span className=\"limit\" {...attributes}>\r\n      lim{children}y\r\n    </span>\r\n  );\r\n};\r\n\r\n\r\nexport const limitIcon = () => {\r\n  return (\r\n    <>\r\n    <div className=\"limes\">\r\n            <span className=\"overup\">lim</span>\r\n            <span className=\"overdn\">x&rarr;0</span>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport numerator from \"./Numerator\";\r\nimport denominator from \"./Denominator\";\r\nimport \"./index.css\";\r\n\r\nexport const fractionDOM = () => [\r\n  {\r\n    type: \"math\",\r\n    subtype: \"fraction\",\r\n    children: [numerator.slateDOM(), denominator.slateDOM()],\r\n  },\r\n  {\r\n    children: [\r\n      {\r\n        text: \"\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const fractionElement = (attributes: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLSpanElement> & React.HTMLAttributes<HTMLSpanElement>, children: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined) => {\r\n  return (\r\n    <span className=\"fraction\" {...attributes}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const fractionIcon = () => {\r\n  return (\r\n    <>\r\n      <span className=\"fraction-icon\">\r\n        <span>x</span>\r\n        <span className=\"denominator-icon\">y</span>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport const fractionLatex = (attributes: JSX.IntrinsicAttributes & React.ClassAttributes<HTMLSpanElement> & React.HTMLAttributes<HTMLSpanElement>, children: string | number | boolean | {} | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactNodeArray | React.ReactPortal | null | undefined) => {\r\n  return (\r\n    <span {...attributes}>\r\n      <span> - \\frac{\"{a}{b}\"}</span>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\n\r\n","import { ClassAttributes, HTMLAttributes, ReactChild, ReactFragment, ReactPortal } from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport const dom = () => [\r\n  {\r\n    type: \"math\",\r\n    subtype: \"bigOperator\",\r\n    children: [],\r\n  },\r\n  {\r\n    children: [\r\n      {\r\n        text: \" \",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const Element = (attributes: JSX.IntrinsicAttributes & ClassAttributes<HTMLSpanElement> & HTMLAttributes<HTMLSpanElement>, children: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined) => {\r\n  return (\r\n    <span className=\"bigOperator\" {...attributes}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport const bigOpIcon = () => {\r\n  return (\r\n    <>\r\n      <div className=\"bigOperator\">\r\n        <span className=\"top-limit-ico\">x</span>\r\n        <span className=\"symbol-ico\">&#11034;</span>\r\n        <span className=\"bottom-limit-ico\">y=n</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n","import { AnyObject } from \"@udecode/plate\"\r\nexport const EquationBox = ({\r\n    attributes,\r\n    children,\r\n    element,\r\n    className,\r\n  }: AnyObject) => {\r\n    var style;\r\n    if (element.gridArea){\r\n      style = {fontSize: element.size + 'em', gridArea: element.gridArea}\r\n    }\r\n    else{\r\n      style = {fontSize: element.size + 'em'}\r\n    }\r\n    \r\n    \r\n    return (\r\n      <span \r\n        {...attributes}\r\n        style={style}\r\n        className={className}\r\n      >\r\n        {children}\r\n      </span>\r\n    )\r\n  }\r\n  ","import { Laugh } from \"@styled-icons/boxicons-regular\";\r\nimport { PlatePlugin, createMentionPlugin, createComboboxPlugin, createPlateUI, createPluginFactory, MentionElement, StyledElement } from \"@udecode/plate\";\r\nimport { createPlugins, withProps } from \"@udecode/plate-core\";\r\nimport { components } from \".\";\r\nimport { ELEMENT_BIG_OPERATOR } from \"./BigOperator\";\r\nimport { ELEMENT_EQUATIONBOX } from \"./EquationBoxElement\";\r\nimport { EquationBox } from \"./EquationBoxElement/getEquationBoxElement\";\r\nimport { ELEMENT_EQUATION_TEXT } from \"./EquationText\";\r\nimport { PlateMath } from \"./EquationText/getEquationTextRenderLeaf\";\r\nimport { ELEMENT_FRACTION } from \"./Fraction\";\r\nimport { ELEMENT_LIMIT } from \"./Limit\";\r\nimport { ELEMENT_MATRIX } from \"./Matrix/defaults\";\r\nimport { ELEMENT_EQUATION_MENTION } from \"./mention/constants\";\r\nimport { ELEMENT_EQUATION_MENTION_INSERT } from \"./mention/defaults\";\r\nimport { EquationMentionElement } from \"./mention/equationMentionElement\";\r\nimport { equationMentionNode } from \"./mention/equationMentionNode\";\r\nimport { ELEMENT_UNEDITABLE_BIG_OPERATOR } from \"./UneditableBigOperator/defaults\";\r\nimport { equationBoxOnKeyDown } from \"./util\";\r\n\r\n\r\n\r\nexport const createEquationBoxPlugin = createPluginFactory({\r\n  key: ELEMENT_EQUATIONBOX,\r\n  //isInline: true,\r\n  isElement: true,\r\n  component: EquationBox,\r\n  handlers: {\r\n    onKeyDown: equationBoxOnKeyDown()\r\n  }\r\n  \r\n  \r\n});\r\n\r\n\r\nexport const createMatrixPlugin = createPluginFactory({\r\n  key: ELEMENT_MATRIX,\r\n  //isInline: true,\r\n  isElement: true,\r\n  //renderLeaf: getRenderLeaf(ELEMENT_EQUATIONBOX),\r\n  component:  withProps(StyledElement, {\r\n      className: 'slate-matrix',\r\n      as: 'table',\r\n      styles: {\r\n        root: {\r\n            display: 'inline-table',\r\n            verticalAlign: 'middle',\r\n            maxWidth: 'none',\r\n        }\r\n      },\r\n    }),\r\n});\r\nexport const createEquationTextPlugin = createPluginFactory({\r\n  key: ELEMENT_EQUATION_TEXT,\r\n  component: PlateMath,\r\n  //isInline: true,\r\n  isVoid: true,\r\n  isElement: true,\r\n});\r\n\r\nexport const createUneditableBigOperator = createPluginFactory({\r\n  key: ELEMENT_UNEDITABLE_BIG_OPERATOR,\r\n  //isInline: true,\r\n  isElement: true,\r\n  //renderLeaf: getRenderLeaf(ELEMENT_EQUATIONBOX),\r\n  \r\n});\r\n\r\n\r\nexport   const createFractionPlugin = createPluginFactory({\r\n    key: ELEMENT_FRACTION,\r\n    //isInline: true,\r\n    isElement: true,\r\n\r\n  });\r\n\r\nexport const createBigOperatorPlugin = createPluginFactory({\r\n    key: ELEMENT_BIG_OPERATOR,\r\n    //isInline: true,\r\n    isElement: true,\r\n\r\n  });\r\n\r\n export const createLimitPlugin = createPluginFactory({\r\n    key: ELEMENT_LIMIT,\r\n    //isInline: true,\r\n    isElement: true,\r\n\r\n  });\r\n\r\n  \r\n export const createEquationMentionInsert = createPluginFactory({\r\n  key: ELEMENT_EQUATION_MENTION_INSERT,\r\n  component: EquationMentionElement,\r\n  isInline: true,\r\n  isElement: true,\r\n\r\n});\r\n  \r\n\r\n\r\nexport const createEquationMentionPlugin = (): PlatePlugin => {\r\n  return createMentionPlugin({ options: { trigger: '/', createMentionNode: (item) => equationMentionNode(item), id: ELEMENT_EQUATION_MENTION}, key: ELEMENT_EQUATION_MENTION  })\r\n}\r\n  \r\n\r\n  export const createMathPlugins = () => {\r\n    const plugins = createPlugins([\r\n      createEquationBoxPlugin(),\r\n      createUneditableBigOperator(),\r\n      createLimitPlugin(),\r\n      createBigOperatorPlugin(),\r\n      createFractionPlugin(),\r\n      createEquationTextPlugin(),\r\n      createMatrixPlugin(),\r\n      createEquationMentionInsert(),\r\n      createEquationMentionPlugin()\r\n    ],{\r\n      components: components,\r\n    });\r\n    return plugins\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { getEquationTextStyles } from './equationText.styles';\r\nimport { useSelected, useFocused } from 'slate-react';\r\nimport { AnyObject } from '@udecode/plate-autoformat/node_modules/@udecode/plate-core';\r\n\r\n\r\nexport const PlateMath = ({\r\n  attributes,\r\n  children,\r\n  element,\r\n  className,\r\n}: AnyObject) => {\r\n  var c = children.props.children.props.text\r\n  return (\r\n    <span \r\n      {...attributes}\r\n      contentEditable={false}\r\n      className={className}\r\n    >\r\n      {c.text}\r\n      {children}\r\n    </span>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { getHandler } from '@udecode/plate-common';\r\nimport { useFocused, useSelected } from 'slate-react';\r\nimport { MentionElementProps, getMentionElementStyles } from '@udecode/plate-mention-ui';\r\n\r\nexport const EquationMentionElement = (props: MentionElementProps) => {\r\n  const {\r\n    attributes,\r\n    children,\r\n    nodeProps,\r\n    styles: _styles,\r\n    element,\r\n    classNames,\r\n    prefixClassNames,\r\n    prefix,\r\n    as,\r\n    onClick,\r\n    renderLabel,\r\n    ...rootProps\r\n  } = props;\r\n\r\n  const selected = useSelected();\r\n  const focused = useFocused();\r\n\r\n  const styles = getMentionElementStyles({ ...props, selected, focused });\r\n\r\n  return (\r\n    <span\r\n      {...attributes}\r\n      as={as}\r\n      data-slate-value={element.value}\r\n      className={styles.root.className}\r\n      css={styles.root.css}\r\n      contentEditable={false}\r\n      onClick={getHandler(onClick, element)}\r\n      {...rootProps}\r\n      {...nodeProps}\r\n    >\r\n      {prefix}\r\n      {renderLabel ? renderLabel(element) : element.value}\r\n      {children}\r\n    </span>\r\n  );\r\n};","import {  ELEMENT_TABLE, withProps, StyledElement, ELEMENT_TR, ELEMENT_TH, ELEMENT_TD, ELEMENT_CODE_BLOCK, CodeBlockElement, MentionElement, createPlateUI } from \"@udecode/plate\";\r\nimport { css } from \"styled-components\";\r\nimport { ELEMENT_BIG_OPERATOR } from \"./BigOperator\";\r\nimport { ELEMENT_FRACTION } from \"./Fraction\";\r\nimport { ELEMENT_LIMIT } from \"./Limit\";\r\nimport { ELEMENT_UNEDITABLE_BIG_OPERATOR } from \"./UneditableBigOperator/defaults\";\r\n  export const components = createPlateUI({\r\n    //[ELEMENT_MENTION]: EquationMentionElement,\r\n\r\n    //[ELEMENT_EQUATION_TEXT]: withProps(StyledElement, {\r\n    //  className: 'slate-mathtext',\r\n    //  as: 'span',\r\n    //}),\r\n\r\n    [ELEMENT_LIMIT]:  withProps(StyledElement, {\r\n      className: 'slate-lim',\r\n      as: 'span',\r\n      styles: {\r\n        root: [\r\n          css`\r\n          display: grid;\r\n          gap: 0px 0px;\r\n          grid-auto-flow: column;\r\n          grid-template-columns: 3em fit-content(1em);\r\n          grid-template-rows: auto auto;\r\n          grid-template-areas: \r\n            \". right\"\r\n            \". right\";\r\n          align-items: center;\r\n          justify-items: center;\r\n      \r\n        `,\r\n      ],\r\n      },\r\n    }),\r\n    [ELEMENT_BIG_OPERATOR]: withProps(StyledElement, {\r\n      className: 'slate-bigop',\r\n      as: 'span',\r\n      styles: {\r\n        root: [\r\n          css`\r\n          display: grid;\r\n          gap: 0px 3px;\r\n          grid-auto-flow: column;\r\n          grid-template-columns: 1em fit-content(1em);\r\n          grid-template-rows: auto auto;\r\n          grid-template-areas:\r\n          \". .\"\r\n          \". right\"\r\n          \". .\";\r\n          align-items: center;\r\n          justify-items: center;\r\n        `,\r\n      ],\r\n      },\r\n    }),\r\n    [ELEMENT_UNEDITABLE_BIG_OPERATOR]: withProps(StyledElement, {\r\n      className: 'slate-ubigop',\r\n      as: 'span',\r\n      styles: {\r\n        root: [\r\n          css`\r\n          display: grid;\r\n          gap: 0px 3px;\r\n          grid-auto-flow: column;\r\n          grid-template-columns: 1em fit-content(1em);\r\n          grid-template-rows: auto auto;\r\n          grid-template-areas:\r\n          \". .\"\r\n          \". right\"\r\n          \". .\";\r\n          align-items: center;\r\n          justify-items: center;\r\n        `,\r\n      ],\r\n      },\r\n    }),\r\n    [ELEMENT_FRACTION]: withProps(StyledElement, {\r\n      className: 'slate-fraction',\r\n      as: 'span',\r\n      styles: {\r\n        root: [\r\n          css`\r\n          display: inline-flex;\r\n          justify-content: flex-start;\r\n          flex-direction: column;\r\n          width: auto;\r\n          text-align: center;\r\n        `,\r\n      ],\r\n      },\r\n    }),\r\n    [ELEMENT_CODE_BLOCK]: withProps(CodeBlockElement, {\r\n      styles: {\r\n        root: [\r\n          css`\r\n            background-color: #111827;\r\n            code {\r\n              color: white;\r\n            }\r\n          `,\r\n        ],\r\n      },\r\n    }),\r\n\r\n/*    [FRACTION]: withProps(StyledElement, {\r\n      className: 'slate-fraction',\r\n      as: 'table',\r\n      styles: {\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            verticalAlign: 'middle',\r\n            padding: '0px',\r\n            margin: '0px',\r\n            borderBottom: '0px',\r\n            lineHeight: '0.1',\r\n            textAlign: 'center'\r\n          }\r\n        },\r\n    }),\r\n    */\r\n\r\n  });\r\n\r\n\r\n\r\n","import 'tippy.js/animations/scale.css';\r\nimport 'tippy.js/dist/tippy.css';\r\nimport React from 'react';\r\nimport { CodeAlt } from '@styled-icons/boxicons-regular/CodeAlt';\r\nimport { CodeBlock } from '@styled-icons/boxicons-regular/CodeBlock';\r\nimport { Highlight } from '@styled-icons/boxicons-regular/Highlight';\r\nimport { Subscript } from '@styled-icons/foundation/Subscript';\r\nimport { Superscript } from '@styled-icons/foundation/Superscript';\r\nimport { BorderAll } from '@styled-icons/material/BorderAll';\r\nimport { BorderBottom } from '@styled-icons/material/BorderBottom';\r\nimport { BorderClear } from '@styled-icons/material/BorderClear';\r\nimport { BorderLeft } from '@styled-icons/material/BorderLeft';\r\nimport { BorderRight } from '@styled-icons/material/BorderRight';\r\nimport { BorderTop } from '@styled-icons/material/BorderTop';\r\nimport { FormatAlignCenter } from '@styled-icons/material/FormatAlignCenter';\r\nimport { FormatAlignJustify } from '@styled-icons/material/FormatAlignJustify';\r\nimport { FormatAlignLeft } from '@styled-icons/material/FormatAlignLeft';\r\nimport { FormatAlignRight } from '@styled-icons/material/FormatAlignRight';\r\nimport { FormatBold } from '@styled-icons/material/FormatBold';\r\nimport { FormatIndentDecrease } from '@styled-icons/material/FormatIndentDecrease';\r\nimport { FormatIndentIncrease } from '@styled-icons/material/FormatIndentIncrease';\r\nimport { FormatItalic } from '@styled-icons/material/FormatItalic';\r\nimport { FormatListBulleted } from '@styled-icons/material/FormatListBulleted';\r\nimport { FormatListNumbered } from '@styled-icons/material/FormatListNumbered';\r\nimport { FormatQuote } from '@styled-icons/material/FormatQuote';\r\nimport { FormatStrikethrough } from '@styled-icons/material/FormatStrikethrough';\r\nimport { FormatUnderlined } from '@styled-icons/material/FormatUnderlined';\r\nimport { Keyboard } from '@styled-icons/material/Keyboard';\r\nimport { Looks3 } from '@styled-icons/material/Looks3';\r\nimport { Looks4 } from '@styled-icons/material/Looks4';\r\nimport { Looks5 } from '@styled-icons/material/Looks5';\r\nimport { Looks6 } from '@styled-icons/material/Looks6';\r\nimport { LooksOne } from '@styled-icons/material/LooksOne';\r\nimport { LooksTwo } from '@styled-icons/material/LooksTwo';\r\nimport { TippyProps } from '@tippyjs/react';\r\nimport {\r\n  addColumn,\r\n  addRow,\r\n  AlignToolbarButton,\r\n  BalloonToolbar,\r\n  BlockToolbarButton,\r\n  CodeBlockToolbarButton,\r\n  deleteColumn,\r\n  deleteRow,\r\n  deleteTable,\r\n  ELEMENT_BLOCKQUOTE,\r\n  ELEMENT_CODE_BLOCK,\r\n  ELEMENT_H1,\r\n  ELEMENT_H2,\r\n  ELEMENT_H3,\r\n  ELEMENT_H4,\r\n  ELEMENT_H5,\r\n  ELEMENT_H6,\r\n  ELEMENT_OL,\r\n  ELEMENT_UL,\r\n  getPluginType,\r\n  getPreventDefaultHandler,\r\n  indent,\r\n  insertTable,\r\n  ListToolbarButton,\r\n  MARK_BOLD,\r\n  MARK_CODE,\r\n  MARK_HIGHLIGHT,\r\n  MARK_ITALIC,\r\n  MARK_KBD,\r\n  MARK_STRIKETHROUGH,\r\n  MARK_SUBSCRIPT,\r\n  MARK_SUPERSCRIPT,\r\n  MARK_UNDERLINE,\r\n  MarkToolbarButton,\r\n  outdent,\r\n  TableToolbarButton,\r\n  ToolbarButton,\r\n  usePlateEditorRef,\r\n} from '@udecode/plate';\r\n\r\nexport const BasicElementToolbarButtons = () => {\r\n  const editor = usePlateEditorRef()!;\r\n  return (\r\n    <>\r\n      <BlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_H1)}\r\n        icon={<LooksOne />}\r\n      />\r\n      <BlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_H2)}\r\n        icon={<LooksTwo />}\r\n      />\r\n      <BlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_H3)}\r\n        icon={<Looks3 />}\r\n      />\r\n      <BlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_H4)}\r\n        icon={<Looks4 />}\r\n      />\r\n      <BlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_H5)}\r\n        icon={<Looks5 />}\r\n      />\r\n      <BlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_H6)}\r\n        icon={<Looks6 />}\r\n      />\r\n      <BlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_BLOCKQUOTE)}\r\n        icon={<FormatQuote />}\r\n      />\r\n      <CodeBlockToolbarButton\r\n        type={getPluginType(editor, ELEMENT_CODE_BLOCK)}\r\n        icon={<CodeBlock />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const IndentToolbarButtons = () => {\r\n  const editor = usePlateEditorRef()!;\r\n\r\n  return (\r\n    <>\r\n      <ToolbarButton\r\n        onMouseDown={editor && getPreventDefaultHandler(outdent, editor)}\r\n        icon={<FormatIndentDecrease />}\r\n      />\r\n      <ToolbarButton\r\n        onMouseDown={editor && getPreventDefaultHandler(indent, editor)}\r\n        icon={<FormatIndentIncrease />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ListToolbarButtons = () => {\r\n  const editor = usePlateEditorRef()!;\r\n  return (\r\n    <>\r\n      <ListToolbarButton\r\n        type={getPluginType(editor, ELEMENT_UL)}\r\n        icon={<FormatListBulleted />}\r\n      />\r\n      <ListToolbarButton\r\n        type={getPluginType(editor, ELEMENT_OL)}\r\n        icon={<FormatListNumbered />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const AlignToolbarButtons = () => {\r\n  return (\r\n    <>\r\n      <AlignToolbarButton value=\"left\" icon={<FormatAlignLeft />} />\r\n      <AlignToolbarButton value=\"center\" icon={<FormatAlignCenter />} />\r\n      <AlignToolbarButton value=\"right\" icon={<FormatAlignRight />} />\r\n      <AlignToolbarButton value=\"justify\" icon={<FormatAlignJustify />} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const BasicMarkToolbarButtons = () => {\r\n  const editor = usePlateEditorRef()!;\r\n  return (\r\n    <>\r\n    \r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_BOLD)}\r\n        icon={<FormatBold />}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_ITALIC)}\r\n        icon={<FormatItalic />}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_UNDERLINE)}\r\n        icon={<FormatUnderlined />}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_STRIKETHROUGH)}\r\n        icon={<FormatStrikethrough />}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_CODE)}\r\n        icon={<CodeAlt />}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_SUPERSCRIPT)}\r\n        clear={getPluginType(editor, MARK_SUBSCRIPT)}\r\n        icon={<Superscript />}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_SUBSCRIPT)}\r\n        clear={getPluginType(editor, MARK_SUPERSCRIPT)}\r\n        icon={<Subscript />}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const KbdToolbarButton = () => {\r\n  const editor = usePlateEditorRef()!;\r\n  if(!editor) return;\r\n  return (\r\n    <MarkToolbarButton\r\n      type={getPluginType(editor, MARK_KBD)}\r\n      icon={<Keyboard />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const HighlightToolbarButton = () => {\r\n  const editor = usePlateEditorRef()!;\r\n  if(!editor) return;\r\n  return (\r\n    <MarkToolbarButton\r\n      type={getPluginType(editor, MARK_HIGHLIGHT)}\r\n      icon={<Highlight />}\r\n    />\r\n  );\r\n};\r\n\r\nexport const TableToolbarButtons = () => (\r\n  <>\r\n    <TableToolbarButton icon={<BorderAll />} transform={insertTable} />\r\n    <TableToolbarButton icon={<BorderClear />} transform={deleteTable} />\r\n    <TableToolbarButton icon={<BorderBottom />} transform={addRow} />\r\n    <TableToolbarButton icon={<BorderTop />} transform={deleteRow} />\r\n    <TableToolbarButton icon={<BorderLeft />} transform={addColumn} />\r\n    <TableToolbarButton icon={<BorderRight />} transform={deleteColumn} />\r\n  </>\r\n);\r\n\r\nexport const MarkBallonToolbar = () => {\r\n  const editor = usePlateEditorRef()!;\r\n\r\n  const arrow = false;\r\n  const theme = 'dark';\r\n  const tooltip: TippyProps = {\r\n    arrow: true,\r\n    delay: 0,\r\n    duration: [200, 0],\r\n    hideOnClick: false,\r\n    offset: [0, 17],\r\n    placement: 'top',\r\n  };\r\n\r\n  return (\r\n    <BalloonToolbar\r\n      popperOptions={{\r\n        placement: 'top',\r\n      }}\r\n      theme={theme}\r\n      arrow={arrow}\r\n    >\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_BOLD)}\r\n        icon={<FormatBold />}\r\n        tooltip={{ content: 'Bold (⌘B)', ...tooltip }}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_ITALIC)}\r\n        icon={<FormatItalic />}\r\n        tooltip={{ content: 'Italic (⌘I)', ...tooltip }}\r\n      />\r\n      <MarkToolbarButton\r\n        type={getPluginType(editor, MARK_UNDERLINE)}\r\n        icon={<FormatUnderlined />}\r\n        tooltip={{ content: 'Underline (⌘U)', ...tooltip }}\r\n      />\r\n    </BalloonToolbar>\r\n  );\r\n};\r\n","import {\r\n  AutoformatBlockRule,\r\n  ELEMENT_CODE_BLOCK,\r\n  ELEMENT_CODE_LINE,\r\n  getParent,\r\n  isElement,\r\n  isType,\r\n  PlateEditor,\r\n  TEditor,\r\n  toggleList,\r\n  unwrapList,\r\n} from '@udecode/plate'\r\n\r\nexport const preFormat: AutoformatBlockRule['preFormat'] = (editor) => {\r\n  unwrapList(editor as PlateEditor)\r\n}\r\n\r\nexport const format = (editor: TEditor, customFormatting: any) => {\r\n  if (editor.selection) {\r\n    const parentEntry = getParent(editor, editor.selection)\r\n    if (!parentEntry) return\r\n    const [node] = parentEntry\r\n    if (\r\n      isElement(node) &&\r\n      !isType(editor as PlateEditor, node, ELEMENT_CODE_BLOCK) &&\r\n      !isType(editor as PlateEditor, node, ELEMENT_CODE_LINE)\r\n    ) {\r\n      customFormatting()\r\n    }\r\n  }\r\n}\r\n\r\nexport const formatList = (editor: TEditor, elementType: string) => {\r\n  format(editor, () =>\r\n    toggleList(editor as PlateEditor, {\r\n      type: elementType,\r\n    })\r\n  )\r\n}\r\n\r\nexport const formatText = (editor: TEditor, text: string) => {\r\n  format(editor, () => editor.insertText(text))\r\n}\r\n","import {\r\n  AutoformatRule,\r\n  ELEMENT_BLOCKQUOTE,\r\n  ELEMENT_CODE_BLOCK,\r\n  ELEMENT_DEFAULT,\r\n  ELEMENT_H1,\r\n  ELEMENT_H2,\r\n  ELEMENT_H3,\r\n  ELEMENT_H4,\r\n  ELEMENT_H5,\r\n  ELEMENT_H6,\r\n  getPluginType,\r\n  insertEmptyCodeBlock,\r\n  PEditor,\r\n  PlateEditor,\r\n} from '@udecode/plate'\r\nimport { preFormat } from './autoformatUtils'\r\n\r\nexport const autoformatBlocks: AutoformatRule[] = [\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_H1,\r\n    match: '# ',\r\n    preFormat,\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_H2,\r\n    match: '## ',\r\n    preFormat,\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_H3,\r\n    match: '### ',\r\n    preFormat,\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_H4,\r\n    match: '#### ',\r\n    preFormat,\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_H5,\r\n    match: '##### ',\r\n    preFormat,\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_H6,\r\n    match: '###### ',\r\n    preFormat,\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_BLOCKQUOTE,\r\n    match: '> ',\r\n    preFormat,\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_CODE_BLOCK,\r\n    match: '```',\r\n    triggerAtBlockStart: false,\r\n    preFormat,\r\n    format: (editor) => {\r\n      insertEmptyCodeBlock(editor as PlateEditor, {\r\n        defaultType: getPluginType(editor as PlateEditor, ELEMENT_DEFAULT),\r\n        insertNodesOptions: { select: true },\r\n      })\r\n    },\r\n  },\r\n]\r\n","import {\r\n  AutoformatRule,\r\n  ELEMENT_LI,\r\n  ELEMENT_OL,\r\n  ELEMENT_TODO_LI,\r\n  ELEMENT_UL,\r\n  setNodes,\r\n  TElement,\r\n  TodoListItemNodeData,\r\n} from '@udecode/plate'\r\nimport { Editor } from 'slate'\r\nimport { formatList, preFormat } from './autoformatUtils'\r\n\r\nexport const autoformatLists: AutoformatRule[] = [\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_LI,\r\n    match: ['* ', '- '],\r\n    preFormat,\r\n    format: (editor) => formatList(editor, ELEMENT_UL),\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_LI,\r\n    match: ['1. ', '1) '],\r\n    preFormat,\r\n    format: (editor) => formatList(editor, ELEMENT_OL),\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_TODO_LI,\r\n    match: '[] ',\r\n  },\r\n  {\r\n    mode: 'block',\r\n    type: ELEMENT_TODO_LI,\r\n    match: '[x] ',\r\n    format: (editor) =>\r\n      setNodes<TElement<TodoListItemNodeData>>(\r\n        editor,\r\n        { type: ELEMENT_TODO_LI, checked: true },\r\n        {\r\n          match: (n) => Editor.isBlock(editor, n),\r\n        }\r\n      ),\r\n  },\r\n]\r\n","import {\r\n  AutoformatRule,\r\n  MARK_BOLD,\r\n  MARK_CODE,\r\n  MARK_HIGHLIGHT,\r\n  MARK_ITALIC,\r\n  MARK_STRIKETHROUGH,\r\n  MARK_SUBSCRIPT,\r\n  MARK_SUPERSCRIPT,\r\n  MARK_UNDERLINE,\r\n} from '@udecode/plate'\r\n\r\nexport const autoformatMarks: AutoformatRule[] = [\r\n  {\r\n    mode: 'mark',\r\n    type: [MARK_BOLD, MARK_ITALIC],\r\n    match: '***',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: [MARK_UNDERLINE, MARK_ITALIC],\r\n    match: '__*',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: [MARK_UNDERLINE, MARK_BOLD],\r\n    match: '__**',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: [MARK_UNDERLINE, MARK_BOLD, MARK_ITALIC],\r\n    match: '___***',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_BOLD,\r\n    match: '**',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_UNDERLINE,\r\n    match: '__',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_ITALIC,\r\n    match: '*',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_ITALIC,\r\n    match: '_',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_STRIKETHROUGH,\r\n    match: '~~',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_SUPERSCRIPT,\r\n    match: '^',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_SUBSCRIPT,\r\n    match: '~',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_HIGHLIGHT,\r\n    match: '==',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_HIGHLIGHT,\r\n    match: '≡',\r\n  },\r\n  {\r\n    mode: 'mark',\r\n    type: MARK_CODE,\r\n    match: '`',\r\n  },\r\n]\r\n","import {\r\n  autoformatArrow,\r\n  autoformatLegal,\r\n  autoformatLegalHtml,\r\n  autoformatMath,\r\n  autoformatPunctuation,\r\n  autoformatSmartQuotes,\r\n} from '@udecode/plate'\r\nimport { autoformatBlocks } from './autoformatBlocks'\r\nimport { autoformatLists } from './autoformatLists'\r\nimport { autoformatMarks } from './autoformatMarks'\r\n\r\nexport const autoformatRules = [\r\n  ...autoformatBlocks,\r\n  ...autoformatLists,\r\n  ...autoformatMarks,\r\n  ...autoformatSmartQuotes,\r\n  ...autoformatPunctuation,\r\n  ...autoformatLegal,\r\n  ...autoformatLegalHtml,\r\n  ...autoformatArrow,\r\n  ...autoformatMath,\r\n]\r\n","import { ELEMENT_BLOCKQUOTE, ELEMENT_TODO_LI, ELEMENT_PARAGRAPH, PlatePlugin, AutoformatPlugin, ExitBreakPlugin, NormalizeTypesPlugin, IndentPlugin, ResetNodePlugin, SelectOnBackspacePlugin, SoftBreakPlugin, TrailingBlockPlugin, createPlateUI, ELEMENT_CODE_BLOCK, CodeBlockElement, ELEMENT_H1, ELEMENT_H2, ELEMENT_H3, ELEMENT_H4, ELEMENT_H5, ELEMENT_H6, ELEMENT_TD, KEYS_HEADING, ELEMENT_IMAGE, ELEMENT_MEDIA_EMBED, ELEMENT_HR, ELEMENT_CODE_LINE, MARK_BOLD, MARK_ITALIC, isBlockAboveEmpty, isSelectionAtBlockStart, withProps } from \"@udecode/plate\";\r\nimport { ELEMENT_EXCALIDRAW, ExcalidrawElement } from \"@udecode/plate-excalidraw\";\r\nimport { EditableProps } from \"slate-react/dist/components/editable\";\r\nimport { css } from \"styled-components\";\r\nimport { ELEMENT_BIG_OPERATOR } from \"./components/BigOperator\";\r\nimport { ELEMENT_EQUATION_TEXT } from \"./components/EquationText\";\r\nimport { ELEMENT_FRACTION } from \"./components/Fraction\";\r\nimport { ELEMENT_LIMIT } from \"./components/Limit\";\r\nimport { ELEMENT_MATRIX } from \"./components/Matrix/defaults\";\r\nimport { autoformatRules } from \"./components/mention/autoformat/autoformatRules\";\r\nimport { MENTIONABLES } from \"./components/mention/mentionables\";\r\n\r\nconst resetBlockTypesCommonRule = {\r\n    types: [ELEMENT_BLOCKQUOTE, ELEMENT_TODO_LI],\r\n    defaultType: ELEMENT_PARAGRAPH,\r\n  };\r\n  interface Config {\r\n    components: Record<string, any>;\r\n    editableProps: EditableProps;\r\n    docxOptions: Record<string, Partial<PlatePlugin>>;\r\n  \r\n    align: Partial<PlatePlugin>;\r\n    autoformat: Partial<PlatePlugin<{}, AutoformatPlugin>>;\r\n    exitBreak: Partial<PlatePlugin<{}, ExitBreakPlugin>>;\r\n    forceLayout: Partial<PlatePlugin<{}, NormalizeTypesPlugin>>;\r\n    indent: Partial<PlatePlugin<{}, IndentPlugin>>;\r\n    lineHeight: Partial<PlatePlugin>;\r\n    mentionItems: any;\r\n    resetBlockType: Partial<PlatePlugin<{}, ResetNodePlugin>>;\r\n    selectOnBackspace: Partial<PlatePlugin<{}, SelectOnBackspacePlugin>>;\r\n    softBreak: Partial<PlatePlugin<{}, SoftBreakPlugin>>;\r\n    trailingBlock: Partial<PlatePlugin<{}, TrailingBlockPlugin>>;\r\n  }\r\n  \r\n  export const CONFIG: Config = {\r\n    editableProps: {\r\n      autoFocus: process.env.NODE_ENV !== 'production',\r\n      spellCheck: false,\r\n      placeholder: 'Type…',\r\n      style: {\r\n        padding: '15px',\r\n      },\r\n    },\r\n    components: createPlateUI({\r\n      [ELEMENT_CODE_BLOCK]: withProps(CodeBlockElement, {\r\n        styles: {\r\n          root: [\r\n            css`\r\n              background-color: #111827;\r\n              code {\r\n                color: white;\r\n              }\r\n            `,\r\n          ],\r\n        },\r\n      }),\r\n      [ELEMENT_EXCALIDRAW]: ExcalidrawElement,\r\n    }),\r\n  \r\n    align: {\r\n      inject: {\r\n        props: {\r\n          validTypes: [\r\n            ELEMENT_PARAGRAPH,\r\n            ELEMENT_H1,\r\n            ELEMENT_H2,\r\n            ELEMENT_H3,\r\n            ELEMENT_H4,\r\n            ELEMENT_H5,\r\n            ELEMENT_H6,\r\n          ],\r\n        },\r\n      },\r\n    },\r\n    indent: {\r\n      inject: {\r\n        props: {\r\n          validTypes: [\r\n            ELEMENT_PARAGRAPH,\r\n            ELEMENT_H1,\r\n            ELEMENT_H2,\r\n            ELEMENT_H3,\r\n            ELEMENT_H4,\r\n            ELEMENT_H5,\r\n            ELEMENT_H6,\r\n            ELEMENT_BLOCKQUOTE,\r\n            ELEMENT_CODE_BLOCK,\r\n          ],\r\n        },\r\n      },\r\n    },\r\n    lineHeight: {\r\n      inject: {\r\n        props: {\r\n          defaultNodeValue: 1.5,\r\n          validNodeValues: [1, 1.2, 1.5, 2, 3],\r\n          validTypes: [\r\n            ELEMENT_PARAGRAPH,\r\n            ELEMENT_H1,\r\n            ELEMENT_H2,\r\n            ELEMENT_H3,\r\n            ELEMENT_H4,\r\n            ELEMENT_H5,\r\n            ELEMENT_H6,\r\n          ],\r\n        },\r\n      },\r\n    },\r\n    resetBlockType: {\r\n      options: {\r\n        rules: [\r\n          {\r\n            ...resetBlockTypesCommonRule,\r\n            hotkey: 'Enter',\r\n            predicate: isBlockAboveEmpty,\r\n          },\r\n          {\r\n            ...resetBlockTypesCommonRule,\r\n            hotkey: 'Backspace',\r\n            predicate: isSelectionAtBlockStart,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    trailingBlock: { type: ELEMENT_PARAGRAPH },\r\n    softBreak: {\r\n      options: {\r\n        rules: [\r\n          { hotkey: 'shift+enter' },\r\n          {\r\n            hotkey: 'enter',\r\n            query: {\r\n              allow: [ELEMENT_CODE_BLOCK, ELEMENT_BLOCKQUOTE, ELEMENT_TD],\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    exitBreak: {\r\n      options: {\r\n        rules: [\r\n          {\r\n            hotkey: 'mod+enter',\r\n          },\r\n          {\r\n            hotkey: 'mod+shift+enter',\r\n            before: true,\r\n          },\r\n          {\r\n            hotkey: 'enter',\r\n            query: {\r\n              start: true,\r\n              end: true,\r\n              allow: KEYS_HEADING,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    selectOnBackspace: {\r\n      options: {\r\n        query: {\r\n          allow: [ELEMENT_IMAGE, ELEMENT_MEDIA_EMBED, ELEMENT_HR],\r\n        },\r\n      },\r\n    },\r\n    autoformat: {\r\n      options: {\r\n        rules: autoformatRules,\r\n      },\r\n    },\r\n    mentionItems: MENTIONABLES,\r\n    forceLayout: {\r\n      options: {\r\n        rules: [{ path: [0], strictType: ELEMENT_H1 }],\r\n      },\r\n    },\r\n    docxOptions: {\r\n      [ELEMENT_CODE_BLOCK]: {\r\n        deserializeHtml: {\r\n          validClassName: 'SourceCode',\r\n        },\r\n      },\r\n      [ELEMENT_CODE_LINE]: {\r\n        deserializeHtml: {\r\n          validClassName: 'VerbatimChar',\r\n        },\r\n      },\r\n      [MARK_BOLD]: {\r\n        deserializeHtml: [\r\n          { validNodeName: ['STRONG', 'B'] },\r\n          {\r\n            validStyle: {\r\n              fontWeight: ['600', '700', 'bold'],\r\n            },\r\n          },\r\n        ],\r\n        // query: (el) => {\r\n        //   if (\r\n        //     ['STRONG', 'B'].includes(el.nodeName) &&\r\n        //     (el.children[0] as HTMLElement)?.style.fontWeight === 'normal'\r\n        //   ) {\r\n        //     return false;\r\n        //   }\r\n        //\r\n        //   return true;\r\n      },\r\n      [MARK_ITALIC]: {\r\n        deserializeHtml: {\r\n          query: (el) => {\r\n            if (\r\n              el.nodeName === 'EM' &&\r\n              (el.children[0] as HTMLElement)?.style.fontStyle === 'normal'\r\n            ) {\r\n              return false;\r\n            }\r\n  \r\n            return true;\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };","import { FormatColorText, Check, FontDownload, LineWeight, Link, OndemandVideo } from \"@styled-icons/material\";\r\nimport { createPlugins, createBlockquotePlugin, createTodoListPlugin, createImagePlugin, createHorizontalRulePlugin, createLineHeightPlugin, createLinkPlugin, createListPlugin, createTablePlugin, createMediaEmbedPlugin, createCodeBlockPlugin, createAlignPlugin, createBoldPlugin, createCodePlugin, createItalicPlugin, createHighlightPlugin, createUnderlinePlugin, createStrikethroughPlugin, createSubscriptPlugin, createSuperscriptPlugin, createFontBackgroundColorPlugin, createFontFamilyPlugin, createFontColorPlugin, createFontSizePlugin, createFontWeightPlugin, createKbdPlugin, createNodeIdPlugin, createIndentPlugin, createResetNodePlugin, createSoftBreakPlugin, createExitBreakPlugin, createNormalizeTypesPlugin, createTrailingBlockPlugin, createSelectOnBackspacePlugin, createComboboxPlugin, createDeserializeMdPlugin, createDeserializeCsvPlugin, createDeserializeDocxPlugin, createJuicePlugin, ColorPickerToolbarDropdown, HeadingToolbar, ImageToolbarButton, LineHeightToolbarDropdown, LinkToolbarButton, MARK_BG_COLOR, MARK_COLOR, MediaEmbedToolbarButton, Plate, createPlateUI } from \"@udecode/plate\";\r\nimport { createMathPlugins, MathToolbar } from \"./components\";\r\nimport { BasicElementToolbarButtons, ListToolbarButtons, IndentToolbarButtons, BasicMarkToolbarButtons, AlignToolbarButtons, TableToolbarButtons } from \"./Toolbars\";\r\nimport { Image } from '@styled-icons/boxicons-regular'\r\nimport {CONFIG} from \"./config\"\r\n\r\nexport const Plugins = () => {\r\n  let components = createPlateUI();\r\n  const plugins = createPlugins([\r\n    createBlockquotePlugin(),\r\n    createTodoListPlugin(),\r\n    createImagePlugin(),\r\n    createHorizontalRulePlugin(),\r\n    createLineHeightPlugin(CONFIG.lineHeight),\r\n    createLinkPlugin(),\r\n    createListPlugin(),\r\n    createTablePlugin(),\r\n    createMediaEmbedPlugin(),\r\n    createCodeBlockPlugin(),\r\n    createAlignPlugin(CONFIG.align),\r\n    createBoldPlugin(),\r\n    createCodePlugin(),\r\n    createItalicPlugin(),\r\n    createHighlightPlugin(),\r\n    createUnderlinePlugin(),\r\n    createStrikethroughPlugin(),\r\n    createSubscriptPlugin(),\r\n    createSuperscriptPlugin(),\r\n    createFontBackgroundColorPlugin(),\r\n    createFontFamilyPlugin(),\r\n    createFontColorPlugin(),\r\n    createFontSizePlugin(),\r\n    createFontWeightPlugin(),\r\n    createKbdPlugin(),\r\n    createNodeIdPlugin(),\r\n    createIndentPlugin(CONFIG.indent),\r\n    //createAutoformatPlugin(CONFIG.autoformat),\r\n    createResetNodePlugin(CONFIG.resetBlockType),\r\n    createSoftBreakPlugin(CONFIG.softBreak),\r\n    createExitBreakPlugin(CONFIG.exitBreak),\r\n    createNormalizeTypesPlugin(CONFIG.forceLayout),\r\n    createTrailingBlockPlugin(CONFIG.trailingBlock),\r\n    createSelectOnBackspacePlugin(CONFIG.selectOnBackspace),\r\n    createComboboxPlugin(),\r\n    createDeserializeMdPlugin(),\r\n    createDeserializeCsvPlugin(),\r\n    createDeserializeDocxPlugin(),\r\n    createJuicePlugin(),\r\n  ], {\r\n    components,\r\n  });\r\n  plugins.push(...createMathPlugins())\r\n  return (\r\n    <Plate\r\n      id=\"playground\"\r\n      editableProps={CONFIG.editableProps}\r\n      plugins={plugins}\r\n    >\r\n      <HeadingToolbar>\r\n        <BasicElementToolbarButtons />\r\n        <ListToolbarButtons />\r\n        <IndentToolbarButtons />\r\n        <BasicMarkToolbarButtons />\r\n        <ColorPickerToolbarDropdown\r\n          pluginKey={MARK_COLOR}\r\n          icon={<FormatColorText />}\r\n          selectedIcon={<Check />}\r\n          tooltip={{ content: 'Text color' }}\r\n        />\r\n        <ColorPickerToolbarDropdown\r\n          pluginKey={MARK_BG_COLOR}\r\n          icon={<FontDownload />}\r\n          selectedIcon={<Check />}\r\n          tooltip={{ content: 'Highlight color' }}\r\n        />\r\n        <AlignToolbarButtons />\r\n        <LineHeightToolbarDropdown icon={<LineWeight />} />\r\n        <LinkToolbarButton icon={<Link />} />\r\n        <ImageToolbarButton icon={<Image />} />\r\n        <MediaEmbedToolbarButton icon={<OndemandVideo />} />\r\n        <TableToolbarButtons />\r\n      </HeadingToolbar>\r\n      <HeadingToolbar> \r\n          <MathToolbar></MathToolbar>\r\n      </HeadingToolbar>\r\n        \r\n        \r\n\r\n    </Plate>\r\n  );\r\n}\r\n\r\n\r\n","import { TComboboxItem, TComboboxItemWithData } from \"@udecode/plate\"\r\nimport { MentionEquationData } from \"./mentionables\"\r\n\r\nexport const equationMentionNode = (item: TComboboxItem): MentionEquationData => {\r\n    var item2 = item as TComboboxItemWithData<MentionEquationData>\r\n    return {\r\n      value: item2.data.value,\r\n      node: item2.data.node\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Plugins } from './index.tsx';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Plugins />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}